ary("TCGAbiolinks")
library("TCGAbiolinks")
library("TCGAbiolinks")
library("Biobase")
load("TCGA_LGG.rda")
class(data_rna_LGG)
query_LGG <- GDCquery(project = "TCGA-LGG",
data.category = "Transcriptome Profiling",
data.type = "Gene Expression Quantification",
workflow.type = "STAR - Counts")
query_LGG <- GDCquery(project = "TCGA-LGG",
data.category = "Transcriptome Profiling",
data.type = "Gene Expression Quantification",
workflow.type = "STAR - Counts")
load("C:/Users/Karyna/Desktop/Github/Extracao_de_Dados/Trabalho_R/.RData")
load("C:/Users/Karyna/Desktop/Github/Extracao_de_Dados/Trabalho_R/enviroment.RDataTmp")
View(data)
View(data)
library("DESeq2")
library("TCGAbiolinks")
library("Biobase")
library("DESeq2")
library("ggbeeswarm")
library("pheatmap")
library("org.Hs.eg.db")
library("fgsea")
library("ggplot2")
library("factoextra")
library("limma")
library("genefilter")
query_LGG <- GDCquery(project = "TCGA-LGG",
data.category = "Transcriptome Profiling",
data.type = "Gene Expression Quantification",
workflow.type = "STAR - Counts")
data_rna_LGG <- GDCprepare(query_LGG, summarizedExperiment = TRUE, save = TRUE, save.filename = "TCGA_LGG.rda")
save.image("C:/Users/Karyna/Desktop/Github/Extracao_de_Dados/Trabalho_R/.RData")
class(data_rna_LGG)
ols_with_not_reported <- which(sapply(meta_LGG,function(x) sum(x == "not reported", na.rm = TRUE)) > 50)
library("DESeq2")
library("TCGAbiolinks")
library("Biobase")
library("DESeq2")
library("ggbeeswarm")
library("pheatmap")
library("org.Hs.eg.db")
library("fgsea")
library("ggplot2")
library("factoextra")
library("limma")
library("genefilter")
cols_with_not_reported <- which(sapply(meta_LGG,function(x) sum(x == "not reported", na.rm = TRUE)) > 50)
meta_LGG = colData(data_rna_LGG)
data_rna_LGG_matrix <- as.matrix(assay(data_rna_LGG))
data_rna_LGG_matrix
pairs(data_rna_LGG_matrix)
pairs(data_rna_LGG_matrix)
pcares = prcomp(data_rna_LGG_matrix, scale = T)
save.image("C:/Users/Karyna/Desktop/Github/Extracao_de_Dados/Trabalho_R/.RData")
pcares2 = princomp(scale(data_rna_LGG_matrix))
summary(pcares)
summary(pcares2)
min(which(summary(pcares)$importance[3,]>0.9))
plot(pcares)
plot(pcares2)
biplot(pcares) #tirar conclusões disto
fviz_famd_ind(pcares, geom = c("point"), col.ind = "cos2", gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
palette = "rainbow", addEllipses = FALSE, ellipse.type = "confidence",
ggtheme = theme_minimal(), repel = TRUE, labels = F)
tt_mdr = rowttests(t(data_rna_LGG_matrix))
rank_de_mdr = order(tt_mdr$p.value)
genes_de_mdr = rank_de_mdr[1:30]
data_rna_LGG_rank = data_rna_LGG_matrix[genes_de_mdr,]
eucD = dist(data_rna_LGG_rank)
eucD
###complete
cl.hier <- hclust(eucD)
plot(cl.hier,xlab="", ylab="Distância", main="Dendograma da expressão dos 30 genes com menor p-value \nmétodo:complete, distância Euclidiana")
###single
cl.hier2 <- hclust(eucD, method="single")
plot(cl.hier2,xlab="", ylab="Distância", main="Dendograma da expressão dos 30 genes com menor p-value \nmétodo:single, distância Euclidiana")
###average
cl.hier3 <- hclust(eucD, method="average")
plot(cl.hier3,xlab="", ylab="Distância", main="Dendograma da expressão dos 30 genes com menor p-value \nmétodo:average, distância Euclidiana")
heatmap(data_rna_LGG_rank, labCol = F, main="Expressão dos 30 genes com menor p-value")
save.image("C:/Users/Karyna/Desktop/Github/Extracao_de_Dados/Trabalho_R/.RData")
library("factoextra")
fviz_nbclust(t(data_rna_LGG_matrix), kmeans, method = "silhouette")
save.image("C:/Users/Karyna/Desktop/Github/Extracao_de_Dados/Trabalho_R/.RData")
library("DESeq2")
library("TCGAbiolinks")
library("Biobase")
library("DESeq2")
library("ggbeeswarm")
library("pheatmap")
library("org.Hs.eg.db")
library("fgsea")
library("ggplot2")
library("factoextra")
library("limma")
library("genefilter")
tt_mdr = rowttests(t(data_rna_LGG_matrix))
rank_de_mdr = order(tt_mdr$p.value)
genes_de_mdr = rank_de_mdr[1:30]
data_rna_LGG_rank = data_rna_LGG_matrix[genes_de_mdr,]
eucD = dist(data_rna_LGG_rank)
eucD
###complete
cl.hier <- hclust(eucD)
plot(cl.hier,xlab="", ylab="Distância", main="Dendograma da expressão dos 30 genes com menor p-value \nmétodo:complete, distância Euclidiana")
###single
cl.hier2 <- hclust(eucD, method="single")
plot(cl.hier2,xlab="", ylab="Distância", main="Dendograma da expressão dos 30 genes com menor p-value \nmétodo:single, distância Euclidiana")
###average
cl.hier3 <- hclust(eucD, method="average")
plot(cl.hier3,xlab="", ylab="Distância", main="Dendograma da expressão dos 30 genes com menor p-value \nmétodo:average, distância Euclidiana")
plot(cl.hier2,xlab="", ylab="Distância", main="Dendograma da expressão dos 30 genes com menor p-value \nmétodo:single, distância Euclidiana")
plot(cl.hier3,xlab="", ylab="Distância", main="Dendograma da expressão dos 30 genes com menor p-value \nmétodo:average, distância Euclidiana")
plot(cl.hier,xlab="", ylab="Distância", main="Dendograma da expressão dos 30 genes com menor p-value \nmétodo:complete, distância Euclidiana")
###A reduçção de dimensionalidade pode ser uma estratégia para determiar o número de genes que representam uma certa parte da variação do modelo.
dim (ddsSE_norm)
ddsSE_norm <- DESeq(ddsSE_filtrado)
library("DESeq2")
library("TCGAbiolinks")
library("Biobase")
library("DESeq2")
library("ggbeeswarm")
library("pheatmap")
library("org.Hs.eg.db")
library("fgsea")
library("ggplot2")
library("factoextra")
library("limma")
library("genefilter")
library("SummarizedExperiment")
ddsSE_norm <- DESeq(ddsSE_filtrado)
data_de <- data_rna_LGG[,!is.na(data_rna_LGG$paper_IDH.status)] #filtragem das amostras
ddsSE <- DESeqDataSet(data_de, design = ~ paper_IDH.status)
keep <- which(rowSums(counts(ddsSE) >= 10) >= 3) #filtragem tendo em conta uma contagem minima
ddsSE_filtrado <- ddsSE[keep, ]
ddsSE_norm <- DESeq(ddsSE_filtrado)
resultsNames(ddsSE_norm)
res <- results(ddsSE_norm, name = "paper_IDH.status_WT_vs_Mutant")
dea <- as.data.frame(res)
summary(dea)
desvio_padrao <- apply(dea, 1, sd)
mcols(res, use.names = TRUE)
summary(res)
plotMA(res, main="DESeq2", ylim=c(-10,10))
hist(dea$pvalue, breaks=20,col = "grey", border = "white", xlab = "P-value",
ylab = "Number of genes", main = "P-value value distribution")
genes_pvalue_fi <- rownames(res)[which(dea$pvalue < 0.05)]
pvalue_fi= sum(dea$pvalue < 0.05, na.rm=TRUE)
hist(dea$padj, breaks=20,col = "grey", border = "white", xlab = "P-adj",
ylab = "Number of genes", main = "P-adj value distribution")
genes_padj_fi <- rownames(res)[which(dea$padj < 0.01)]
##pathways <- gmtPathways("C:/Users/rodri/OneDrive/Documentos/h.all.v7.4.entrez.gmt")
pathways <- gmtPathways("C:/Users/Karyna/Desktop/Github/Extracao_de_Dados/Trabalho_R/h.all.v7.4.entrez.gmt")
###A reduçção de dimensionalidade pode ser uma estratégia para determiar o número de genes que representam uma certa parte da variação do modelo.
dim (ddsSE_norm)
data_rna_LGG_matrix <- as.matrix(assay(ddsSE_norm))
# Transpor a matriz
data_rna_LGG_transposed <- t(data_rna_LGG_matrix)
dim(data_rna_LGG_transposed)
tt_mdr = rowttests(data_rna_LGG_transposed)
rank_de_mdr = order(tt_mdr$p.value)
genes_de_mdr = rank_de_mdr[1:30]
data_rna_LGG_rank = data_rna_LGG_matrix[genes_de_mdr,]
eucD = dist(data_rna_LGG_rank)
eucD
###complete
cl.hier <- hclust(eucD)
plot(cl.hier,xlab="", ylab="Distância", main="Dendograma da expressão dos 30 genes com menor p-value \nmétodo:complete, distância Euclidiana")
tt_mdr = rowttests(t(data_rna_LGG_transposed))
rank_de_mdr = order(tt_mdr$p.value)
genes_de_mdr = rank_de_mdr[1:30]
data_rna_LGG_rank = data_rna_LGG_matrix[genes_de_mdr,]
eucD = dist(data_rna_LGG_rank)
eucD
###complete
cl.hier <- hclust(eucD)
plot(cl.hier,xlab="", ylab="Distância", main="Dendograma da expressão dos 30 genes com menor p-value \nmétodo:complete, distância Euclidiana")
tt_mdr = rowttests(data_rna_LGG_matrix)
rank_de_mdr = order(tt_mdr$p.value)
genes_de_mdr = rank_de_mdr[1:30]
data_rna_LGG_rank = data_rna_LGG_matrix[genes_de_mdr,]
eucD = dist(data_rna_LGG_rank)
eucD
###complete
cl.hier <- hclust(eucD)
plot(cl.hier,xlab="", ylab="Distância", main="Dendograma da expressão dos 30 genes com menor p-value \nmétodo:complete, distância Euclidiana")
tt_mdr = rowttests(t(data_rna_LGG_matrix))
rank_de_mdr = order(tt_mdr$p.value)
genes_de_mdr = rank_de_mdr[1:30]
data_rna_LGG_rank = data_rna_LGG_matrix[genes_de_mdr,]
eucD = dist(data_rna_LGG_rank)
eucD
###complete
cl.hier <- hclust(eucD)
plot(cl.hier,xlab="", ylab="Distância", main="Dendograma da expressão dos 30 genes com menor p-value \nmétodo:complete, distância Euclidiana")
tt_mdr = rowttests(t(data_rna_LGG_matrix))
tt_mdr = rowttests(data_rna_LGG_matrix)
tt_mdr
tt_mdr = rowttests(t(data_rna_LGG_matrix))
tt_mdr
rank_de_mdr = order(tt_mdr$p.value)
rank_de_mdr
genes_de_mdr = rank_de_mdr[1:30]
genes_de_mdr
data_rna_LGG_rank = data_rna_LGG_matrix[genes_de_mdr,]
data_rna_LGG_rank
tt_mdr = rowttests(data_rna_LGG_matrix)
rank_de_mdr = order(tt_mdr$p.value)
genes_de_mdr = rank_de_mdr[1:30]
data_rna_LGG_rank = data_rna_LGG_matrix[genes_de_mdr,]
data_rna_LGG_rank
data_rna_LGG_rank = data_rna_LGG_matrix[genes_de_mdr]
data_rna_LGG_rank
tt_mdr = rowttests(t(data_rna_LGG_matrix))
rank_de_mdr = order(tt_mdr$p.value)
genes_de_mdr = rank_de_mdr[1:30]
data_rna_LGG_rank = data_rna_LGG_matrix[genes_de_mdr]
data_rna_LGG_rank
eucD = dist(data_rna_LGG_rank)
l.hier <- hclust(eucD)
plot(
data_rna_LGG_matrix
tt_mdr = rowttests(t(data_rna_LGG_matrix))
rank_de_mdr = order(tt_mdr$p.value)
rank_de_mdr
View(tt_mdr)
tt_mdr = rowttests(data_rna_LGG_matrix)
View(tt_mdr)
rank_de_mdr = order(tt_mdr$p.value)
genes_de_mdr = rank_de_mdr[1:30]
data_rna_LGG_rank = data_rna_LGG_matrix[genes_de_mdr,]
eucD = dist(data_rna_LGG_rank)
###complete
cl.hier <- hclust(eucD)
plot(cl.hier,xlab="", ylab="Distância", main="Dendograma da expressão dos 30 genes com menor p-value \nmétodo:complete, distância Euclidiana")
tt_mdr = rowttests(t(data_rna_LGG_matrix))
rank_de_mdr = order(tt_mdr$p.value)
genes_de_mdr = rank_de_mdr[1:30]
data_rna_LGG_rank = t(data_rna_LGG_matrix[genes_de_mdr,])
eucD = dist(data_rna_LGG_rank)
eucD
###complete
cl.hier <- hclust(eucD)
plot(cl.hier,xlab="", ylab="Distância", main="Dendograma da expressão dos 30 genes com menor p-value \nmétodo:complete, distância Euclidiana")
tt_mdr = rowttests(t(data_rna_LGG_matrix))
View(tt_mdr)
genes_de_mdr
data_rna_LGG_rank = data_rna_LGG_transposed[genes_de_mdr,])
data_rna_LGG_rank = data_rna_LGG_transposed[genes_de_mdr,]
eucD = dist(data_rna_LGG_rank)
eucD
###complete
cl.hier <- hclust(eucD)
plot(cl.hier,xlab="", ylab="Distância", main="Dendograma da expressão dos 30 genes com menor p-value \nmétodo:complete, distância Euclidiana")
View(tt_mdr)
View(tt_mdr)
genes_de_mdr = rank_de_mdr[1:258]
data_rna_LGG_rank = data_rna_LGG_transposed[genes_de_mdr,]
eucD = dist(data_rna_LGG_rank)
eucD
###complete
cl.hier <- hclust(eucD)
plot(cl.hier,xlab="", ylab="Distância", main="Dendograma da expressão dos 30 genes com menor p-value \nmétodo:complete, distância Euclidiana")
genes_de_mdr = rank_de_mdr[1:30]
data_rna_LGG_rank = data_rna_LGG_transposed[genes_de_mdr,]
eucD = dist(data_rna_LGG_rank)
eucD
###complete
cl.hier <- hclust(eucD)
plot(cl.hier,xlab="", ylab="Distância", main="Dendograma da expressão dos 30 genes com menor p-value \nmétodo:complete, distância Euclidiana")
###single
cl.hier2 <- hclust(eucD, method="single")
plot(cl.hier2,xlab="", ylab="Distância", main="Dendograma da expressão dos 30 genes com menor p-value \nmétodo:single, distância Euclidiana")
###average
cl.hier3 <- hclust(eucD, method="average")
plot(cl.hier3,xlab="", ylab="Distância", main="Dendograma da expressão dos 30 genes com menor p-value \nmétodo:average, distância Euclidiana")
heatmap(data_rna_LGG_rank, labCol = F, main="Expressão dos 30 genes com menor p-value")
View(data_rna_LGG_transposed)
View(data_rna_LGG)
plot(cl.hier,xlab="", ylab="Distância", main="Dendograma da expressão dos 30 genes com menor p-value \nmétodo:complete, distância Euclidiana", ddsSE_filtrado$paper_IDH.status, cex = 0.5)
###complete
cl.hier <- hclust(eucD)
plot(cl.hier,xlab="", ylab="Distância", main="Dendograma da expressão dos 30 genes com menor p-value \nmétodo:complete, distância Euclidiana", ddsSE_filtrado$paper_IDH.status, cex = 0.5)
