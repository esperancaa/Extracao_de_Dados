ary("TCGAbiolinks")
library("TCGAbiolinks")
library("TCGAbiolinks")
library("Biobase")
load("TCGA_LGG.rda")
class(data_rna_LGG)
query_LGG <- GDCquery(project = "TCGA-LGG",
data.category = "Transcriptome Profiling",
data.type = "Gene Expression Quantification",
workflow.type = "STAR - Counts")
query_LGG <- GDCquery(project = "TCGA-LGG",
data.category = "Transcriptome Profiling",
data.type = "Gene Expression Quantification",
workflow.type = "STAR - Counts")
load("C:/Users/Karyna/Desktop/Github/Extracao_de_Dados/Trabalho_R/.RData")
load("C:/Users/Karyna/Desktop/Github/Extracao_de_Dados/Trabalho_R/enviroment.RDataTmp")
View(data)
View(data)
library("DESeq2")
library("TCGAbiolinks")
library("Biobase")
library("DESeq2")
library("ggbeeswarm")
library("pheatmap")
library("org.Hs.eg.db")
library("fgsea")
library("ggplot2")
library("factoextra")
library("limma")
library("genefilter")
query_LGG <- GDCquery(project = "TCGA-LGG",
data.category = "Transcriptome Profiling",
data.type = "Gene Expression Quantification",
workflow.type = "STAR - Counts")
data_rna_LGG <- GDCprepare(query_LGG, summarizedExperiment = TRUE, save = TRUE, save.filename = "TCGA_LGG.rda")
save.image("C:/Users/Karyna/Desktop/Github/Extracao_de_Dados/Trabalho_R/.RData")
class(data_rna_LGG)
ols_with_not_reported <- which(sapply(meta_LGG,function(x) sum(x == "not reported", na.rm = TRUE)) > 50)
library("DESeq2")
library("TCGAbiolinks")
library("Biobase")
library("DESeq2")
library("ggbeeswarm")
library("pheatmap")
library("org.Hs.eg.db")
library("fgsea")
library("ggplot2")
library("factoextra")
library("limma")
library("genefilter")
cols_with_not_reported <- which(sapply(meta_LGG,function(x) sum(x == "not reported", na.rm = TRUE)) > 50)
meta_LGG = colData(data_rna_LGG)
data_rna_LGG_matrix <- as.matrix(assay(data_rna_LGG))
data_rna_LGG_matrix
pairs(data_rna_LGG_matrix)
pairs(data_rna_LGG_matrix)
pcares = prcomp(data_rna_LGG_matrix, scale = T)
save.image("C:/Users/Karyna/Desktop/Github/Extracao_de_Dados/Trabalho_R/.RData")
pcares2 = princomp(scale(data_rna_LGG_matrix))
summary(pcares)
summary(pcares2)
min(which(summary(pcares)$importance[3,]>0.9))
plot(pcares)
plot(pcares2)
biplot(pcares) #tirar conclusões disto
fviz_famd_ind(pcares, geom = c("point"), col.ind = "cos2", gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
palette = "rainbow", addEllipses = FALSE, ellipse.type = "confidence",
ggtheme = theme_minimal(), repel = TRUE, labels = F)
tt_mdr = rowttests(t(data_rna_LGG_matrix))
rank_de_mdr = order(tt_mdr$p.value)
genes_de_mdr = rank_de_mdr[1:30]
data_rna_LGG_rank = data_rna_LGG_matrix[genes_de_mdr,]
eucD = dist(data_rna_LGG_rank)
eucD
###complete
cl.hier <- hclust(eucD)
plot(cl.hier,xlab="", ylab="Distância", main="Dendograma da expressão dos 30 genes com menor p-value \nmétodo:complete, distância Euclidiana")
###single
cl.hier2 <- hclust(eucD, method="single")
plot(cl.hier2,xlab="", ylab="Distância", main="Dendograma da expressão dos 30 genes com menor p-value \nmétodo:single, distância Euclidiana")
###average
cl.hier3 <- hclust(eucD, method="average")
plot(cl.hier3,xlab="", ylab="Distância", main="Dendograma da expressão dos 30 genes com menor p-value \nmétodo:average, distância Euclidiana")
heatmap(data_rna_LGG_rank, labCol = F, main="Expressão dos 30 genes com menor p-value")
save.image("C:/Users/Karyna/Desktop/Github/Extracao_de_Dados/Trabalho_R/.RData")
library("factoextra")
fviz_nbclust(t(data_rna_LGG_matrix), kmeans, method = "silhouette")
save.image("C:/Users/Karyna/Desktop/Github/Extracao_de_Dados/Trabalho_R/.RData")
